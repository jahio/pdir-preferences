#
# secrets-example
#
# DO NOT ADD ANY INFORMATION INTO THIS FILE! IT SHOULD REMAIN A TEMPLATE ONLY!
#     This is to protect you from accidentally committing sensitive info.
#
# This is a **template**, an *example* if you will, on how to set up "secrets"
# for your local **environment variables**. This is a BadIdea(TM) for _many_
# reasons, but sadly there are situations where it's necessary because
# there isn't an elegant (or sane?) equivalent solution that provides
# better security. At least, not yet.
#

#
# I HAVE NO ACTUAL `secrets` FILE. HOW DO I START?
#
#   `cp $HOME/.preferences/secrets-example $HOME/.preferences/secrets`
#
# Now edit the file: `nano $HOME/.preferences/secrets`
# When finished, ensure that you don't somehow commit details you shouldn't:
#     `cd $HOME/.preferences && git status` -- should be no changes
#

#
# HOW TO ADD A NEW SECRET KEY/VALUE PAIR
#
#     `export MYSECRET="some string in double quotes here"`
#
# Then re-load your shell, restart your terminal emulator, logout of your
# window manager and back in, or maybe even reboot depending on your needs.
#

#
# OK I SET IT, HOW DO I USE IT?
#
# Say you've set the secret `MYSECRET` as in the above example and your shell
# has been reloaded correctly. (Tip: `source $HOME/.zshrc`). You should now
# see it as an ENVIRONMENT VARIABLE:
#
#     $ echo $MYSECRET
#     some string in double quotes here
#     $
#
# If not, launch a totally new terminal session/shell, ensure you're running
# **THE RIGHT SHELL** (e.g. that you changed to ZSH over bash), and then look
# through output from `env | less` and see what you see.
#

#
# EXAMPLES
#

export GITHUB_API_TOKEN="lolsekuritah"
export MY_SSN="really dumb idea"
export NUCLEAR_LAUNCH_CODES="boom, whoosh!"

#
# And that's all there is to it! Good luck! And please, avoid this practice
# like the plague, if you can. It's a security risk and needs to die.
#

